{"name": "make questions -- @1.1 cases", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\api\\async_step.py\", line 157, in wrapped_decorator\n    return step_decorator(astep_func, context, *args, **kwargs)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\api\\async_step.py\", line 124, in step_decorator\n    loop.run_until_complete(astep_func(context, *args, **kwargs))\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\base_events.py\", line 603, in run_until_complete\n    self.run_forever()\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\windows_events.py\", line 316, in run_forever\n    super().run_forever()\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\base_events.py\", line 570, in run_forever\n    self._run_once()\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\base_events.py\", line 1823, in _run_once\n    event_list = self._selector.select(timeout)\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\windows_events.py\", line 430, in select\n    self._poll(timeout)\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\windows_events.py\", line 779, in _poll\n    status = _overlapped.GetQueuedCompletionStatus(self._iocp, ms)\n"}, "steps": [{"name": "Given create template for service_undefined question", "status": "passed", "start": 1610562854926, "stop": 1610562854926}, {"name": "And make post request to make question", "status": "passed", "start": 1610562854927, "stop": 1610562854997}, {"name": "And pause - 10 sec(s)", "status": "passed", "start": 1610562854997, "stop": 1610562864999}, {"name": "Then check that question comes to telegram_bot sd_test3_bot", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\api\\async_step.py\", line 157, in wrapped_decorator\n    return step_decorator(astep_func, context, *args, **kwargs)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\api\\async_step.py\", line 124, in step_decorator\n    loop.run_until_complete(astep_func(context, *args, **kwargs))\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\base_events.py\", line 603, in run_until_complete\n    self.run_forever()\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\windows_events.py\", line 316, in run_forever\n    super().run_forever()\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\base_events.py\", line 570, in run_forever\n    self._run_once()\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\base_events.py\", line 1823, in _run_once\n    event_list = self._selector.select(timeout)\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\windows_events.py\", line 430, in select\n    self._poll(timeout)\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\windows_events.py\", line 779, in _poll\n    status = _overlapped.GetQueuedCompletionStatus(self._iocp, ms)\n"}, "start": 1610562865000, "stop": 1610562873629}], "parameters": [{"name": "type_question", "value": "service_undefined"}, {"name": "telegram_bot", "value": "sd_test3_bot"}], "start": 1610562854924, "stop": 1610562873630, "uuid": "d40500e0-c2be-4436-b575-2a02b5551334", "historyId": "aae4bf3687226030616a39ed7842976f", "fullName": "features/reconciliation_upload.feature:make questions", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "manager_user"}, {"name": "tag", "value": "super_user"}, {"name": "feature", "value": "reconciliation upload"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}