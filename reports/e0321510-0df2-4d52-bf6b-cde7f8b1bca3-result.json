{"name": "creation of past entries", "status": "broken", "statusDetails": {"message": "ValueError: I/O operation on closed file\n", "trace": "  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\api\\async_step.py\", line 157, in wrapped_decorator\n    return step_decorator(astep_func, context, *args, **kwargs)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\api\\async_step.py\", line 124, in step_decorator\n    loop.run_until_complete(astep_func(context, *args, **kwargs))\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\base_events.py\", line 616, in run_until_complete\n    return future.result()\n  File \"features\\steps\\reconciliation_upload.py\", line 63, in send_fees_riskbot\n    await context.tele_user.send_file(entity='sd_test8_bot', file=file)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\telethon\\client\\uploads.py\", line 353, in send_file\n    file_handle, media, image = await self._file_to_media(\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\telethon\\client\\uploads.py\", line 670, in _file_to_media\n    file_handle = await self.upload_file(\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\telethon\\client\\uploads.py\", line 533, in upload_file\n    async with helpers._FileStream(file, file_size=file_size) as stream:\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\telethon\\helpers.py\", line 332, in __aenter__\n    seekable = await _maybe_await(self._file.seekable())\n"}, "steps": [{"name": "Given telegram", "status": "broken", "statusDetails": {"message": "ValueError: I/O operation on closed file\n", "trace": "  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\api\\async_step.py\", line 157, in wrapped_decorator\n    return step_decorator(astep_func, context, *args, **kwargs)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\behave\\api\\async_step.py\", line 124, in step_decorator\n    loop.run_until_complete(astep_func(context, *args, **kwargs))\n  File \"C:\\Users\\wsu\\anaconda3\\lib\\asyncio\\base_events.py\", line 616, in run_until_complete\n    return future.result()\n  File \"features\\steps\\reconciliation_upload.py\", line 63, in send_fees_riskbot\n    await context.tele_user.send_file(entity='sd_test8_bot', file=file)\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\telethon\\client\\uploads.py\", line 353, in send_file\n    file_handle, media, image = await self._file_to_media(\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\telethon\\client\\uploads.py\", line 670, in _file_to_media\n    file_handle = await self.upload_file(\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\telethon\\client\\uploads.py\", line 533, in upload_file\n    async with helpers._FileStream(file, file_size=file_size) as stream:\n  File \"c:\\users\\wsu\\pycharmprojects\\msw_api\\venv\\lib\\site-packages\\telethon\\helpers.py\", line 332, in __aenter__\n    seekable = await _maybe_await(self._file.seekable())\n"}, "start": 1610373331203, "stop": 1610373333657}], "start": 1610373331201, "stop": 1610373333658, "uuid": "476fe7ae-bdf9-4878-9351-7cf28c642788", "historyId": "af8c3982c62583736161e6767ac3b793", "fullName": "features/reconciliation_upload.feature:creation of past entries", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "manager_user"}, {"name": "tag", "value": "super_user"}, {"name": "feature", "value": "reconciliation upload"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}